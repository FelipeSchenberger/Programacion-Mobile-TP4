services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    build:
      context: .
      dockerfile: kafka.Dockerfile
    depends_on: 
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Recommended for single-node Kafka setups to avoid startup race conditions
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    healthcheck:
      # This check is more robust. It waits until Kafka is ready to list topics.
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 15
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - kafka

  api:
    build:
      context: ./backend
      dockerfile: src/api/Dockerfile
    depends_on: 
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      API_PORT: 3002
    ports:
      - "3002:3002"
    restart: unless-stopped

  orchestrator:
    build:
      context: ./backend
      dockerfile: src/orchestrator/Dockerfile
    depends_on: 
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
    restart: unless-stopped

  gateway:
    build:
      context: ./backend
      dockerfile: src/gateway/Dockerfile
    depends_on: 
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      GATEWAY_PORT: 4001
    ports:
      - "4001:4001"
    restart: unless-stopped
